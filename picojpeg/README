
I have had some luck using open source software to test processors.  In
this case the picojpeg project actually did help me find a couple of
things with thumbulator.

The llvm toolchain uses mov lr,pc which on the surface is a bad thing
if you want to use that lr as a return address for example because
the program counter does not have the lsbit set, but the link register
should contain the lsbit set if the return address is a thumb address.

Now the llvm tools also generated a push with lr and pop with pc.  This
also looks bad on initial inspection, but the ARM ARM says that for
armv4T the pop {pc} is like a mov pc,value which means the address does
not need the lsbit set, but must be an address to thumb code for armv5t
and newer the pop {pc} is instead like  a bx address, which needs the
lsbit set but is more flexible.  So thumbulator warns if it sees a
pop {pc} with the lsbit not set but keeps going.

Likewise gcc had a situation where the program counter was a destination
without the lsbit being set.  This is okay as the pc doesnt need to
have the lsbit set.  I have a few places where I trap for this waiting
for a compiler to generate those instructions.  I removed the trap and
the program worked fine.

The llvm optimized code was doing something with .data and I dont mess
with .data so it was failing until I got the linker script and such just
right.

So this is a comparison between llvm and gcc llvm is using less
instructions, more read cycles, fewer write cycles.  Overall fewer
instructions but more memory cycles than gcc.

Using -O3 optimizations on gcc it uses less everything, instructions,
reads, writes.

./thumbulator picojpeg/lpicojpegtest.bin
00D3C870


swi 0x01


instructions 26254542
fetches      26254542
reads        12803264
writes       7501769
memcycles    46559575
systick_ints 0


-O2 optimizations:

./thumbulator picojpeg/gpicojpegtest.bin
00D3C870


swi 0x01


instructions 26612966
fetches      26612966
reads        9707188
writes       6069420
memcycles    42389574
systick_ints 0


-O3 optmizations:

../thumbulator gpicojpegtest.bin
00D3C870


swi 0x01


instructions 24468869
fetches      24468869
reads        6636744
writes       3174541
memcycles    34280154
systick_ints 0










clang --version
clang version 3.3 (branches/release_33 185429)

llc  --version
LLVM (http://llvm.org/):
  LLVM version 3.3
  Optimized build with assertions.

arm-elf-gcc --version

arm-elf-gcc (GCC) 4.7.2
Copyright (C) 2012 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

arm-elf-as --version

GNU assembler (GNU Binutils) 2.22
Copyright 2011 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or later.
This program has absolutely no warranty.
This assembler was configured for a target of `arm-elf'.
